// <auto-generated />
using System;
using HomeRent.Dbcontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeRent.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240111124930_properties_request_Approve")]
    partial class properties_request_Approve
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HomeRent.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomeReCity");
                });

            modelBuilder.Entity("HomeRent.Models.HomeBook", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropertiesID")
                        .HasColumnType("int");

                    b.Property<int>("activate")
                        .HasColumnType("int");

                    b.Property<string>("contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("PropertiesID");

                    b.ToTable("HomeRBooking");
                });

            modelBuilder.Entity("HomeRent.Models.Properties", b =>
                {
                    b.Property<int>("property_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("property_id"), 1L, 1);

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image_URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequestPropertyApprove")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.Property<int>("ac")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("agreement")
                        .HasColumnType("int");

                    b.Property<string>("avilablefor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("badroom")
                        .HasColumnType("int");

                    b.Property<int>("balcony")
                        .HasColumnType("int");

                    b.Property<int>("bath")
                        .HasColumnType("int");

                    b.Property<int>("bed")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dining")
                        .HasColumnType("int");

                    b.Property<int>("exhaustfan")
                        .HasColumnType("int");

                    b.Property<int>("fan")
                        .HasColumnType("int");

                    b.Property<int>("floor")
                        .HasColumnType("int");

                    b.Property<int>("fridge")
                        .HasColumnType("int");

                    b.Property<string>("independent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kitchen")
                        .HasColumnType("int");

                    b.Property<int>("light")
                        .HasColumnType("int");

                    b.Property<int>("parking")
                        .HasColumnType("int");

                    b.Property<int>("rent_amount")
                        .HasColumnType("int");

                    b.Property<int>("sofa")
                        .HasColumnType("int");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stove")
                        .HasColumnType("int");

                    b.Property<int>("tv")
                        .HasColumnType("int");

                    b.Property<int>("wardrobe")
                        .HasColumnType("int");

                    b.Property<int>("washingMachine")
                        .HasColumnType("int");

                    b.Property<int>("waterpurifier")
                        .HasColumnType("int");

                    b.HasKey("property_id");

                    b.HasIndex("UsersId");

                    b.ToTable("HReProperties");
                });

            modelBuilder.Entity("HomeRent.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("RequestAgentAccess")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("agent")
                        .HasColumnType("tinyint");

                    b.Property<string>("profile_Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HReUsers");
                });

            modelBuilder.Entity("HomeRent.Models.HomeBook", b =>
                {
                    b.HasOne("HomeRent.Models.Properties", "Properties")
                        .WithMany()
                        .HasForeignKey("PropertiesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("HomeRent.Models.Properties", b =>
                {
                    b.HasOne("HomeRent.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
